{"ast":null,"code":"var _jsxFileName = \"/home/pedroaluz/Documentos/ecormmece/front-end/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Link } from 'react-router-dom';\nimport Routes from './routes';\nimport './App.css';\nimport { AppContext } from \"./libs/contextLibs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isAuthenticated, userHasAuthenticated] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n      value: {\n        isAuthenticated,\n        userHasAuthenticated\n      },\n      children: /*#__PURE__*/_jsxDEV(Routes, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"u1vuif388dJc+RWBmz3IEhJoWBw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/pedroaluz/Documentos/ecormmece/front-end/src/App.js"],"names":["React","useState","Link","Routes","AppContext","App","isAuthenticated","userHasAuthenticated"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAsB,kBAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,WAAP;AACA,SAASC,UAAT,QAA2B,oBAA3B;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,eAAD,EAAkBC,oBAAlB,IAA0CN,QAAQ,CAAC,KAAD,CAAxD;AAEA,sBACE;AAAA,2BACE,QAAC,UAAD,CAAY,QAAZ;AAAqB,MAAA,KAAK,EAAE;AAAEK,QAAAA,eAAF;AAAmBC,QAAAA;AAAnB,OAA5B;AAAA,6BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAOD;;GAXQF,G;;KAAAA,G;AAaT,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Link, } from 'react-router-dom';\nimport Routes from './routes';\nimport './App.css'\nimport { AppContext } from \"./libs/contextLibs\";\n\nfunction App() {\n\n  const [isAuthenticated, userHasAuthenticated] = useState(false);\n\n  return (\n    <>\n      <AppContext.Provider value={{ isAuthenticated, userHasAuthenticated }}>\n        <Routes />\n      </AppContext.Provider>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}